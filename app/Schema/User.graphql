type Query {
  allUsers(paginate: Paginate): PaginateUser
  getUser(where: WhereUser!): User
}

type Mutation {
  addUser(user: NewUser!): User
  editUser(where: WhereUser!, data: EditUser): User

  login(info: LoginInput!): LoginInfo!
}

type User {
  id: Int!
  wallet: Wallet!
  team: Team!
  email: String!
  created_at: String!
  updated_at: String!
}

type LoginInfo {
  type: String!
  token: String!
  refreshToken: String
}

type PaginateUser implements PaginateResult {
  total: Int!
  perPage: Int!
  page: Int!
  lastPage: Int!
  result: [User]!
}
